# =======================================
# Join several analysis outputs and generate
# candidates with all domains 
# Read the analysis of each domain and
# keep the sequences which present all
# the domain.
# =======================================
import re
import sys
import pandas as pd

res_file = snakemake.input.res
protein_file = snakemake.input.protein
organisms_file = snakemake.input.organisms_file
output_file = snakemake.output[0]
accession = snakemake.params.accession


input_df = pd.read_csv(res_file, sep=';', header=0)
input_df = input_df.dropna(how='any')
nb_hits = len(input_df)
candidates = input_df["SeqID"].tolist()
print(candidates)


    



nb_prot = 0
for line in open(protein_file, 'r') :
    if re.search(">", line) :
        nb_prot += 1
        
        
#df = pd.read_csv(res_file, sep=';', header=0)


d = {'Assembly': accession,'Nb complete candidates': [nb_hits], 'Candidates':[candidates],'Nb proteins': [nb_prot]}

df = pd.DataFrame(data=d)

df_orga = pd.read_csv(organisms_file, sep='\t', header=0)
taxid = df_orga.loc[df_orga['Assembly Accession'] == accession, 'Taxid'].values[0]    
df["Taxid"] = taxid 
species = df_orga.loc[df_orga['Assembly Accession'] == accession, 'Species Name'].values[0]    
df["Species"] = species  
df.to_csv(output_file, sep=';')

#file=open(output_file, 'w')
#file.write(str(nb_hits))
#file.close()
